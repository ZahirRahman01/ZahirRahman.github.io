/*

SQL Data Cleaning Project

Cleaning up data in SQL Server to make it suitable for analysis 

*/

Select *
From [SQL Project].[dbo].[NashvilleHousing]
--------------------------------------------------------------------------------------------------------------------------

-- Standardize Date Format


Select SaleDateConverted, CONVERT(Date,SaleDate)
From [SQL Project].[dbo].[NashvilleHousing]
-- update not working so Alter used
ALTER TABLE [SQL Project].[dbo].[NashvilleHousing]
Add SaleDateConverted Date;

Update [SQL Project].[dbo].[NashvilleHousing]
SET SaleDateConverted = CONVERT(Date,SaleDate)

-- Populate Property Address data

Select *
From [SQL Project].[dbo].[NashvilleHousing]
--Where PropertyAddress is null
order by ParcelID

-- *same ParcelID matching property address*

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
From [SQL Project].[dbo].[NashvilleHousing] a
JOIN [SQL Project].[dbo].[NashvilleHousing] b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
From [SQL Project].[dbo].[NashvilleHousing] a
JOIN [SQL Project].[dbo].[NashvilleHousing] b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null


--------------------------------------------------------------------------------------------------------------------------

-- Breaking out Address into Individual Columns (Address, City, State)


Select PropertyAddress
From [SQL Project].[dbo].[NashvilleHousing]
--Where PropertyAddress is null
--order by ParcelID

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) as Address

From [SQL Project].[dbo].[NashvilleHousing]

ALTER TABLE [SQL Project].[dbo].[NashvilleHousing]
Add PropertySplitAddress Nvarchar(255);

Update [SQL Project].[dbo].[NashvilleHousing]
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )

ALTER TABLE [SQL Project].[dbo].[NashvilleHousing]
Add PropertySplitCity Nvarchar(255);

Update [SQL Project].[dbo].[NashvilleHousing]
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress))



Select OwnerAddress
From [SQL Project].[dbo].[NashvilleHousing]

Select
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
From [SQL Project].[dbo].[NashvilleHousing]


ALTER TABLE [SQL Project].[dbo].[NashvilleHousing]
Add OwnerSplitAddress Nvarchar(255);

Update [SQL Project].[dbo].[NashvilleHousing]
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE [SQL Project].[dbo].[NashvilleHousing]
Add OwnerSplitCity Nvarchar(255);

Update [SQL Project].[dbo].[NashvilleHousing]
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)



ALTER TABLE [SQL Project].[dbo].[NashvilleHousing]
Add OwnerSplitState Nvarchar(255);

Update [SQL Project].[dbo].[NashvilleHousing]
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)

--------------------------------------------------------------------------------------------------------------------------


-- Change Y and N to Yes and No in "Sold as Vacant" field


Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From [SQL Project].[dbo].[NashvilleHousing]
Group by SoldAsVacant
order by 2

Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From [SQL Project].[dbo].[NashvilleHousing]


Update [SQL Project].[dbo].[NashvilleHousing]
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END






-----------------------------------------------------------------------------------------------------------------------------------------------------------

-- Remove Duplicates

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From [SQL Project].[dbo].[NashvilleHousing]
--order by ParcelID
)
DELETE
From RowNumCTE
Where row_num > 1

--Select*
--From RowNumCTE
--Where row_num > 1
--Order by PropertyAddress

Select *
From [SQL Project].[dbo].[NashvilleHousing]

---------------------------------------------------------------------------------------------------------

-- Delete Unused Columns


ALTER TABLE [SQL Project].[dbo].[NashvilleHousing]
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate

Select *
From [SQL Project].[dbo].[NashvilleHousing]
